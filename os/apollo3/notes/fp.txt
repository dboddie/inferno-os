======  ======================  ==============================  ==================  ==============  ==========  ==============================
tl      Bits 15-0               Bits 31-16                      ARM syntax          Section         Supported   tl references
======  ======================  ==============================  ==================  ==============  ==========  ==============================
ADDF    1110 1110 0D11 Vn       Vd 1010 N0M0     Vm             VADD Sd, Sn, Sm     A7.7.222        Yes         ../../../utils/tl/thumb.c:1308
ADDD    1110 1110 0D11 Vn       Vd 1011 N0M0     Vm             VADD Dd, Dn, Dm     A7.7.222        No          ../../../utils/tl/thumb.c:1689
======  ======================  ==============================  ==================  ==============  ==========  ==============================
CMPF    1110 1110 1D11 0100     Vd 1010 E1M0     Vm             VCMP{E} Sd, Sm      A7.7.223 (T1)   Yes         ../../../utils/tl/thumb.c:1684
CMPD    1110 1110 1D11 0100     Vd 1011 E1M0     Vm             VCMP{E} Dd, Dm      A7.7.223 (T1)   No
-       1110 1110 1111 0001     Rt 1010 0001 0000               VMRS Rt, FPSCR      A7.7.243        Yes         ../../../utils/tl/thumb.c:1352
======  ======================  ==============================  ==================  ==============  ==========  ==============================
DIVF    1110 1110 1D00 Vn       Vd 1010 N0M0     Vm             VDIV Sd, Sn, Sm     A7.7.229        Yes         ../../../utils/tl/thumb.c:1697
DIVD    1110 1110 1D00 Vn       Vd 1011 N0M0     Vm             VDIV Dd, Dn, Dm     A7.7.229        No
======  ======================  ==============================  ==================  ==============  ==========  ==============================
MOVF    1110 1110 1D11 imm4H    Vd 1010 (0)0(0)0 imm4L          VMOV Sd, #imm       A7.7.236        Yes
MOVD    1110 1110 1D11 imm4H    Vd 1011 (0)0(0)0 imm4L          VMOV Dd, #imm       A7.7.236        No
MOVF    1110 1110 1D11 0000     Vd 1010 01M0     Vm             VMOV Sd, Sm         A7.7.237        Yes
MOVD    1110 1110 1D11 0000     Vd 1011 01M0     Vm             VMOV Dd, Dm         A7.7.237        No
======  ======================  ==============================  ==================  ==============  ==========  ==============================
MOVF    1110 1101 UD01 Rn       Vd 1010 imm8----------          VLDR Sd, Rn, #imm   A7.7.233 (T2)   Yes         ../../../utils/tl/thumb.c:1231
MOVD    1110 1101 UD01 Rn       Vd 1011 imm8----------          VLDR Dd, Rn, #imm   A7.7.233 (T1)   Yes         ../../../utils/tl/thumb.c:1736
MOVF    1110 1101 UD00 Rn       Vd 1010 imm8----------          VSTR Sd, Rn, #imm   A7.7.256        Yes         ../../../utils/tl/thumb.c:1225
MOVD    1110 1101 UD00 Rn       Vd 1011 imm8----------          VSTR Dd, Rn, #imm   A7.7.256        Yes         ../../../utils/tl/thumb.c:1710
======  ======================  ==============================  ==================  ==============  ==========  ==============================
MOVFD   1110 1110 1D11 0111     Vd 1010 11M0     Vm             VCVT{R} Dd, Sm      A7.7.227                    ../../../utils/tl/thumb.c:1678
MOVDF   1110 1110 1D11 0111     Vd 1011 11M0     Vm             VCVT{R} Sd, Dm      A7.7.227
======  ======================  ==============================  ==================  ==============  ==========  ==============================
MOVWF   1110 1110 1D11 1000     Vd 1010 11M0     Vm             VCVT Sd, Sm         A7.7.225                    ../../../utils/tl/thumb.c:1711
MOVFW   1110 1110 1D11 1101     Vd 1010 11M0     Vm             VCVT Sd, Sm         A7.7.225                    ../../../utils/tl/thumb.c:1714
MOVWD   1110 1110 1D11 1000     Vd 1011 11M0     Vm             VCVT Dd, Sm         A7.7.225                    ../../../utils/tl/thumb.c:1717
MOVDW   1110 1110 1D11 1101     Vd 1011 11M0     Vm             VCVT Sd, Dm         A7.7.225                    ../../../utils/tl/thumb.c:1720
======  ======================  ==============================  ==================  ==============  ==========  ==============================
MULF    1110 1110 0D10 Vn       Vd 1010 N0M0     Vm             VMUL Sd, Sn, Sm     A7.7.245        Yes         ../../../utils/tl/thumb.c:1308
MULD    1110 1110 0D10 Vn       Vd 1011 N0M0     Vm             VMUL Dd, Dn, Dm     A7.7.245        No          ../../../utils/tl/thumb.c:1694
======  ======================  ==============================  ==================  ==============  ==========  ==============================
SUBF    1110 1110 0D11 Vn       Vd 1010 N1M0     Vm             VSUB Sd, Sn, Sm     A7.7.257        Yes         ../../../utils/tl/thumb.c:1307
SUBD    1110 1110 0D11 Vn       Vd 1011 N1M0     Vm             VSUB Dd, Dn, Dm     A7.7.257        No          ../../../utils/tl/thumb.c:1692
======  ======================  ==============================  ==================  ==============  ==========  ==============================


1110 1110
---------

======  ==============  ==============================  ==================  ==============  ==============================
tl      Bits 7-0        Bits 31-16                      ARM syntax          Section         tl references
======  ==============  ==============================  ==================  ==============  ==============================
MOVWF   1D11 1000       Vd 1010 11M0     Vm             VCVT Sd, Sm         A7.7.225        ../../../utils/tl/thumb.c:1711
MOVFW   1D11 1101       Vd 1010 11M0     Vm             VCVT Sd, Sm         A7.7.225        ../../../utils/tl/thumb.c:1714
MOVWD   1D11 1000       Vd 1011 11M0     Vm             VCVT Dd, Sm         A7.7.225        ../../../utils/tl/thumb.c:1717
MOVDW   1D11 1101       Vd 1011 11M0     Vm             VCVT Sd, Dm         A7.7.225        ../../../utils/tl/thumb.c:1720
======  ==============  ==============================  ==================  ==============  ==============================
MULF    0-10 Vn         Vd 1010 N0M0     Vm             VMUL Sd, Sn, Sm     A7.7.245        ../../../utils/tl/thumb.c:1308
MULD    0-10 Vn         Vd 1011 N0M0     Vm             VMUL Dd, Dn, Dm     A7.7.245        ../../../utils/tl/thumb.c:1694
======  ==============  ==============================  ==================  ==============  ==============================
ADDF    0-11 Vn         Vd 1010 N0M0     Vm             VADD Sd, Sn, Sm     A7.7.222        ../../../utils/tl/thumb.c:1308
ADDD    0-11 Vn         Vd 1011 N0M0     Vm             VADD Dd, Dn, Dm     A7.7.222        ../../../utils/tl/thumb.c:1689
SUBF    0-11 Vn         Vd 1010 N1M0     Vm             VSUB Sd, Sn, Sm     A7.7.257        ../../../utils/tl/thumb.c:1307
SUBD    0-11 Vn         Vd 1011 N1M0     Vm             VSUB Dd, Dn, Dm     A7.7.257        ../../../utils/tl/thumb.c:1692
======  ==============  ==============================  ==================  ==============  ==============================
DIVF    1-00 Vn         Vd 1010 N0M0     Vm             VDIV Sd, Sn, Sm     A7.7.229        ../../../utils/tl/thumb.c:1697
DIVD    1-00 Vn         Vd 1011 N0M0     Vm             VDIV Dd, Dn, Dm     A7.7.229
======  ==============  ==============================  ==================  ==============  ==============================
MOVF    1-11 imm4H      Vd 1010 (0)0(0)0 imm4L          VMOV Sd, #imm       A7.7.236
MOVD    1-11 imm4H      Vd 1011 (0)0(0)0 imm4L          VMOV Dd, #imm       A7.7.236
======  ==============  ==============================  ==================  ==============  ==============================
CMPF    1D11 0100       Vd 1010 E1M0     Vm             VCMP{E} Sd, Sm      A7.7.223 (T1)   ../../../utils/tl/thumb.c:1684
CMPD    1D11 0100       Vd 1011 E1M0     Vm             VCMP{E} Dd, Dm      A7.7.223 (T1)
-       1111 0001       Rt 1010 0001     0000           VMRS Rt, FPSCR      A7.7.243        ../../../utils/tl/thumb.c:1352
MOVF    1D11 0000       Vd 1010 01M0     Vm             VMOV Sd, Sm         A7.7.237
MOVD    1D11 0000       Vd 1011 01M0     Vm             VMOV Dd, Dm         A7.7.237
======  ==============  ==============================  ==================  ==============  ==============================
MOVFD   1D11 0111       Vd 1010 11M0     Vm             VCVT{R} Dd, Sm      A7.7.227        ../../../utils/tl/thumb.c:1678
MOVDF   1D11 0111       Vd 1011 11M0     Vm             VCVT{R} Sd, Dm      A7.7.227
======  ==============  ==============================  ==================  ==============  ==============================

1110 1101
---------

These should be supported instructions in FPv4-SP:

======  ==============  ==============================  ==================  ==============  ==============================
tl      Bits 7-0        Bits 31-16                      ARM syntax          Section         tl references
======  ==============  ==============================  ==================  ==============  ==============================
MOVF    UD01 Rn         Vd 1010 imm8----------          VLDR Sd, Rn, #imm   A7.7.233 (T2)   ../../../utils/tl/thumb.c:1231
MOVD    UD01 Rn         Vd 1011 imm8----------          VLDR Dd, Rn, #imm   A7.7.233 (T1)   ../../../utils/tl/thumb.c:1736
MOVF    UD00 Rn         Vd 1010 imm8----------          VSTR Sd, Rn, #imm   A7.7.256 (T2)   ../../../utils/tl/thumb.c:1225
MOVD    UD00 Rn         Vd 1011 imm8----------          VSTR Dd, Rn, #imm   A7.7.256 (T1)   ../../../utils/tl/thumb.c:1710
======  ==============  ==============================  ==================  ==============  ==============================

Notes
-----

The math module is needed for floating point number formatting in the print
functions.

We need to think about how the emulated floating point registers are combined
with the real ones, and whether the real or emulated ones need to be stacked.
In this implementation, we use the real registers to hold values because the
FPU executes some instructions and will rely on the registers for data.
Registers are stacked by the compiler, and in extended stack frames when
exceptions occur.

Some double precision instructions are implemented: typically those that
perform transfer between regular registers and FP registers.

Some single precision instructions are not implemented: conversions between
integer and floating point representations (VCVT - A7.7.225).

The ARMv7-M architecture reference manual appears to be incorrect when
describing VCVT (A7.7.225). The opc2 bits are shown in section A8.8.307 of
the ARMv-AR manual (DDI0406c).

Using only single precision instructions can cause the NOCP bit to be set
instead of the UNDEFINSTR bit in the UFSR register upon an undefined single
precision instruction.

Replaced the undefinition of __LITTLE_ENDIAN in Inferno/thumb/include/lib9.h
with a definition of the symbol.

When a usage fault is promoted to a hard fault, it seems that the FPCA bit in
the CONTROL register is cleared, causing confusion about the cause of the
exception.

Clear the UNDEFINSTR bit in the UFSR register after the instruction has been
handled.

One source of hard faults may be that an undefined instruction is encountered
while interrupts are disabled, which causes a fault.

Use of the wrong definition for the Internal representation of zero caused
a loop in dtoa to fail to exit.



0005f1d4: 0000eeb0 00003b40	(969)	MOVD	F0,F3           saves y
 0005f1d8: 00004f6d 000042bc	(970)	CMP	$-1021,R4,      cmp(k, -1021)
 0005f1dc: 000046e4	(970)	MOVW	R12,R12
 0005f1de: 0000db09	(970)	BLT	,5f1f4(BRANCH)
 0005f1e0: 00000021	(971)	MOVW	R4,R1                   k
 0005f1e2: 00000509	(971)	SLL	$20,R1                  k << 20
 0005f1e4: 00009a12	(971)	MOVW	y-4(SP),R2              __HI(y)
 0005f1e6: 00001852	(971)	ADD	R1,R2                   += (k << 20)
 0005f1e8: 00009212	(971)	MOVW	R2,y-4(SP)              and update
 0005f1ea: 0000eeb0 00000b43	(972)	MOVD	F3,F0           load unmodified value
 0005f1ee: 00009e00	(972)	MOVW	0(R13),R6               and prepare to return


0005f1d4: 0000ed8d 00000b11	(969)	MOVD	F0,y-8(SP)      store y
 0005f1d8: 00004f6c 000042bc	(970)	CMP	$-1021,R4,      cmp(k, -1021)
 0005f1dc: 000046e4	(970)	MOVW	R12,R12
 0005f1de: 0000db10	(970)	BLT	,5f202(BRANCH)
 0005f1e0: 0000486b	(971)	MOVW	$.string<>+74(SB),R0    load string address
 0005f1e2: 00009912	(971)	MOVW	y-4(SP),R1              __HI(y)
 0005f1e4: 00009102	(971)	MOVW	R1,8(R13)
 0005f1e6: 00009911	(971)	MOVW	y-8(SP),R1              __LO(y)
 0005f1e8: 00009103	(971)	MOVW	R1,12(R13)
 0005f1ea: 0000f7b4 0000f9a5	(971)	BL	,print+13538(BRANCH)
 0005f1ee: 00009908	(971)	MOVW	k-44(SP),R1             k
 0005f1f0: 00000509	(972)	SLL	$20,R1                  k << 20
 0005f1f2: 00009a12	(972)	MOVW	y-4(SP),R2              __HI(y)
 0005f1f4: 00001852	(972)	ADD	R1,R2                   += (k << 20)
 0005f1f6: 00009212	(972)	MOVW	R2,y-4(SP)              and update
 0005f1f8: 0000ed9d 00000b11	(973)	MOVD	y-8(SP),F0      load modified y
 0005f1fc: 00009e00	(973)	MOVW	0(R13),R6               and return



 0005f16a: 0000eeb0 00003b40    (966)   MOVD    F0,F3
 0005f16e: 00004f83 000042bc    (967)   CMP     $-1021,R4,
 0005f172: 0000db08     (967)   BLT     ,5f186(BRANCH)
 0005f174: 00000021     (968)   MOVW    R4,R1
 0005f176: 00000509     (968)   SLL     $20,R1
 0005f178: 00009a0d     (968)   MOVW    y-4(SP),R2
 0005f17a: 00001852     (968)   ADD     R1,R2
 0005f17c: 0000920d     (968)   MOVW    R2,y-4(SP)
 0005f17e: 0000eeb0 00000b43    (969)   MOVD    F3,F0
 0005f182: 0000b00e     (969)   ADD     $56,R13
 0005f184: 000046f7     (969)   MOVW    R14,R15
